/*
 * This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not
 * distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */

#include "CarbonEngine/Common.h"

#ifdef CARBON_INCLUDE_OPENGL11

#include "CarbonEngine/Graphics/OpenGL11/OpenGL11.h"
#include "CarbonEngine/Platform/PlatformInterface.h"

namespace Carbon
{

namespace OpenGL11Extensions
{

// GL_APPLE_vertex_array_object
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glBindVertexArrayAPPLE);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glDeleteVertexArraysAPPLE);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGenVertexArraysAPPLE);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glIsVertexArrayAPPLE);

// GL_ARB_color_buffer_float
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glClampColorARB);

// GL_ARB_draw_buffers
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glDrawBuffersARB);

// GL_ARB_multisample
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glSampleCoverageARB);

// GL_ARB_multitexture
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glActiveTextureARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glClientActiveTextureARB);

// GL_ARB_shader_objects
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glDeleteObjectARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGetHandleARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glDetachObjectARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glCreateShaderObjectARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glShaderSourceARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glCompileShaderARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glCreateProgramObjectARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glAttachObjectARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glLinkProgramARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glUseProgramObjectARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glValidateProgramARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glUniform1fARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glUniform2fARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glUniform3fARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glUniform4fARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glUniform1iARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glUniform2iARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glUniform3iARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glUniform4iARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glUniform1fvARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glUniform2fvARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glUniform3fvARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glUniform4fvARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glUniform1ivARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glUniform2ivARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glUniform3ivARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glUniform4ivARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glUniformMatrix2fvARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glUniformMatrix3fvARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glUniformMatrix4fvARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGetObjectParameterfvARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGetObjectParameterivARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGetInfoLogARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGetAttachedObjectsARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGetUniformLocationARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGetActiveUniformARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGetUniformfvARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGetUniformivARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGetShaderSourceARB);

// GL_ARB_texture_compression
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glCompressedTexImage1DARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glCompressedTexImage2DARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glCompressedTexImage3DARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glCompressedTexSubImage1DARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glCompressedTexSubImage2DARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glCompressedTexSubImage3DARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGetCompressedTexImageARB);

// GL_ARB_vertex_array_object
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glBindVertexArray);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glDeleteVertexArrays);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGenVertexArrays);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glIsVertexArray);

// GL_ARB_vertex_buffer_object
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glBindBufferARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glDeleteBuffersARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGenBuffersARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glIsBufferARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glBufferDataARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glBufferSubDataARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glMapBufferARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glUnmapBufferARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGetBufferParameterivARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGetBufferPointervARB);

// GL_ARB_vertex_shader
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glVertexAttribPointerARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glEnableVertexAttribArrayARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glDisableVertexAttribArrayARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glBindAttribLocationARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGetActiveAttribARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGetAttribLocationARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGetVertexAttribdvARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGetVertexAttribfvARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGetVertexAttribivARB);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGetVertexAttribPointervARB);

// GL_EXT_draw_range_elements
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glDrawRangeElementsEXT);

// GL_EXT_framebuffer_object
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glIsRenderbufferEXT);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glBindRenderbufferEXT);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glDeleteRenderbuffersEXT);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGenRenderbuffersEXT);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glRenderbufferStorageEXT);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGetRenderbufferParameterivEXT);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glIsFramebufferEXT);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glBindFramebufferEXT);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glDeleteFramebuffersEXT);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGenFramebuffersEXT);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glCheckFramebufferStatusEXT);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glFramebufferTexture1DEXT);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glFramebufferTexture2DEXT);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glFramebufferTexture3DEXT);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glFramebufferRenderbufferEXT);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGetFramebufferAttachmentParameterivEXT);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glGenerateMipmapEXT);

// GL_EXT_stencil_two_side
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glActiveStencilFaceEXT);

// GL_EXT_texture3D
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glTexImage3DEXT);
CARBON_OPENGL_DEFINE_EXTENSION_FUNCTION(glTexSubImage3DEXT);

void mapFunctions()
{
    // GL_APPLE_vertex_array_object
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glBindVertexArrayAPPLE);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glDeleteVertexArraysAPPLE);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGenVertexArraysAPPLE);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glIsVertexArrayAPPLE);

    // GL_ARB_color_buffer_float
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glClampColorARB);

    // GL_ARB_draw_buffers
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glDrawBuffersARB);

    // GL_ARB_multisample
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glSampleCoverageARB);

    // GL_ARB_multitexture
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glActiveTextureARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glClientActiveTextureARB);

    // GL_ARB_shader_objects
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glDeleteObjectARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGetHandleARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glDetachObjectARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glCreateShaderObjectARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glShaderSourceARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glCompileShaderARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glCreateProgramObjectARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glAttachObjectARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glLinkProgramARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glUseProgramObjectARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glValidateProgramARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glUniform1fARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glUniform2fARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glUniform3fARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glUniform4fARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glUniform1iARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glUniform2iARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glUniform3iARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glUniform4iARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glUniform1fvARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glUniform2fvARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glUniform3fvARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glUniform4fvARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glUniform1ivARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glUniform2ivARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glUniform3ivARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glUniform4ivARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glUniformMatrix2fvARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glUniformMatrix3fvARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glUniformMatrix4fvARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGetObjectParameterfvARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGetObjectParameterivARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGetInfoLogARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGetAttachedObjectsARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGetUniformLocationARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGetActiveUniformARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGetUniformfvARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGetUniformivARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGetShaderSourceARB);

    // GL_ARB_texture_compression
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glCompressedTexImage1DARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glCompressedTexImage2DARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glCompressedTexImage3DARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glCompressedTexSubImage1DARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glCompressedTexSubImage2DARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glCompressedTexSubImage3DARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGetCompressedTexImageARB);

    // GL_ARB_vertex_array_object
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glBindVertexArray);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glDeleteVertexArrays);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGenVertexArrays);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glIsVertexArray);

    // GL_ARB_vertex_buffer_object
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glBindBufferARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glDeleteBuffersARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGenBuffersARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glIsBufferARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glBufferDataARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glBufferSubDataARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glMapBufferARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glUnmapBufferARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGetBufferParameterivARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGetBufferPointervARB);

    // GL_ARB_vertex_shader
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glVertexAttribPointerARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glEnableVertexAttribArrayARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glDisableVertexAttribArrayARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glBindAttribLocationARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGetActiveAttribARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGetAttribLocationARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGetVertexAttribdvARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGetVertexAttribfvARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGetVertexAttribivARB);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGetVertexAttribPointervARB);

    // GL_EXT_draw_range_elements
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glDrawRangeElementsEXT);

    // GL_EXT_framebuffer_object
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glIsRenderbufferEXT);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glBindRenderbufferEXT);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glDeleteRenderbuffersEXT);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGenRenderbuffersEXT);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glRenderbufferStorageEXT);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGetRenderbufferParameterivEXT);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glIsFramebufferEXT);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glBindFramebufferEXT);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glDeleteFramebuffersEXT);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGenFramebuffersEXT);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glCheckFramebufferStatusEXT);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glFramebufferTexture1DEXT);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glFramebufferTexture2DEXT);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glFramebufferTexture3DEXT);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glFramebufferRenderbufferEXT);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGetFramebufferAttachmentParameterivEXT);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glGenerateMipmapEXT);

    // GL_EXT_stencil_two_side
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glActiveStencilFaceEXT);

    // GL_EXT_texture3D
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glTexImage3DEXT);
    CARBON_OPENGL_MAP_EXTENSION_FUNCTION(glTexSubImage3DEXT);
}

}

}

#endif
